server.port=8080
server.servlet.context-path=/hamburgerInterface
spring.profiles.active=local
spring.jpa.database=POSTGRESQL
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/texasHamburger
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#kafka producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.client-id=OrderProdecuerClient
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=5
spring.kafka.producer.buffer-memory= 33554432
spring.kafka.producer.batch-size= 16384
spring.kafka.producer.linger-ms =15000
spring.kafka.producer.enable-idempotence= true
spring.kafka.producer.transaction-id = orderTransaction

#kafka consumer

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.client-id=OrderConsumerClient
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.isolation-level=read-committed
spring.kafka.consumer.max-poll-records=20
spring.kafka.consumer.heartbeat-interval=5000

#kafka topics

kafka.topic.name.orders= customerOrder
kafka.consumer.groupId= customerOrderdersGroup

